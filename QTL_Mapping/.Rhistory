source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
source('~/scutellariaMetabolites/code/dataVisHPLC_v2.R')
source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
source('~/scutellariaMetabolites/code/dataVisHPLC_v2.R')
source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
heatmap <- ggplot(data=allDataTotal) +
geom_raster(mapping=aes(x=variety, y=metabolite, fill=concentration)) +
scale_fill_gradientn(colours=c("#FFFFFFFF", "#0066CC")) +
coord_fixed() +
labs(title="Total flavonoid concentrations", x="Variety", y="Metabolite", fill="Concentration (ppm)") +
theme(axis.text.x=element_text(angle=90, vjust=0.5, hjust=1), text=element_text(size=16, color="#000000"), legend.position="bottom")
# TODO: Change color of names to black, replace variety with species, and capitalize first letter of each metabolite
print(heatmap)
heatmap <- ggplot(data=allDataTotal) +
geom_raster(mapping=aes(x=variety, y=metabolite, fill=concentration)) +
scale_fill_gradientn(colours=c("#FFFFFFFF", "#0066CC")) +
coord_fixed() +
labs(title="Total flavonoid concentrations", x="Variety", y="Metabolite", fill="Concentration (ppm)") +
theme(axis.text.x=element_text(angle=90, vjust=0.5, hjust=1, color="#000000"), text=element_text(size=16, color="#000000"), legend.position="bottom")
# TODO: Change color of names to black, replace variety with species, and capitalize first letter of each metabolite
print(heatmap)
heatmap <- ggplot(data=allDataTotal) +
geom_raster(mapping=aes(x=metabolite, y=variety, fill=concentration)) +
scale_fill_gradientn(colours=c("#FFFFFFFF", "#0066CC")) +
coord_fixed() +
labs(x="Metabolite", y="Variety", fill="Concentration (ppm)") +
theme(axis.text.x=element_text(angle=90, vjust=0.5, hjust=1, color="#000000"), text=element_text(size=16, color="#000000"), legend.position="bottom")
# TODO: Change color of names to black, replace variety with species, and capitalize first letter of each metabolite
print(heatmap)
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
revalue(allData, c("hastafolia"="hastifolia"))
revalue(allData$species, c("hastafolia"="hastifolia"))
View(allData)
levels(allData$species)[levels(allData$species)=="hastafolia"] <- "hastifolia"
View(allData)
levels(allDataTotal$species)[levels(allDataTotal$species)=="hastafolia"] <- "hastifolia"
# Define function to capitalize first letter of a string
capStr <- function(y) {
c <- strsplit(y, " ")[[1]]
paste(toupper(substring(c, 1,1)), substring(c, 2),
sep="", collapse=" ")
}
allData$metabolite <- sapply(allData$metabolite, capStr)
allData$metabolite
sapply(allData$metabolite, capStr)
sapply(allData$metabolite, capStr)
sapply(as.character(allData$metabolite), capStr)
allData$metabolite <- factor(sapply(as.character(allData$metabolite), capStr))
View(allData)
source('~/scutellariaMetabolites/code/dataVisHPLC_v2.R')
source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
View(allDataTotal)
allDataTotal$metabolite <- factor(sapply(as.character(allDataTotal$metabolite), capStr))
levels(allDataTotal$variety)[levels(allDataTotal$variety)=="hastafolia"] <- "hastifolia"
heatmap <- ggplot(data=allDataTotal) +
geom_raster(mapping=aes(x=variety, y=metabolite, fill=concentration)) +
scale_fill_gradientn(colours=c("#FFFFFFFF", "#0066CC")) +
coord_fixed() +
labs(x="Metabolite", y="Species", fill="Concentration (ppm)") +
theme(axis.text.x=element_text(angle=90, vjust=0.5, hjust=1, color="#000000"), text=element_text(size=16, color="#000000"), legend.position="bottom")
print(heatmap)
source('~/scutellariaMetabolites/code/dataVisHPLC_v2.R')
source('~/scutellariaMetabolites/code/herbariumHeatmap.R')
source('~/woundingResponse/code/makeHeatmap.R')
source('~/woundingResponse/code/makeHeatmap.R')
source('~/woundingResponse/code/makeHeatmap.R')
source('~/woundingResponse/code/makeHeatmap.R', echo=TRUE)
source('~/woundingResponse/code/makeHeatmap.R', echo=TRUE)
help(chromoqc)
library(vcfR)
help(chromoqc)
help(png)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
View(heatmapData)
View(allData)
View(allData)
help(subset)
View(heatmapData)
help(vector)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
View(binaryData)
View(heatmapData)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
View(binaryData)
help(pivot_wider)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help(pivot_wider)
View(binaryData)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
View(binaryData)
help(dist)
View(binaryData)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
binaryDist
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help(hclust)
install.packages("factoextra")
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
print(binaryDendrogram)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help(fviz_dend)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
plot(binaryCluster)
install.packages("ggdendro")
help(ggdendrogram)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help(ggdendrogram)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
print(binDenPlot)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
print(binDenPlot)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help(hjust)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
View(heatmapData)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
label(binDenData)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
denOrder
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
View(binaryData)
View(binData)
View(binData)
binData <- subset(heatmapData, select=-c(concentration_ppm, stError_ppm, stError_microM))
binData$concentration_microM[binData$concentration_microM>0] <- 1
binData$concentration_microM <- as.factor(binData$concentration_microM)
binData <- binData %>%
pivot_wider(names_from=species, values_from=concentration_microM) %>%
remove_rownames %>%
column_to_rownames(var="metabolite")
View(binData)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
metaboliteOrder
View(allData)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help(unit)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help(hjust)
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
source('~/scutellariaMetabolites/code/hierarchalClustering.R')
help("scale")
help(dist)
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
View(binDenData)
label(binDenData)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
label(binDenData)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
View(binDenData)
label(binDenData)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
help(grep)
grep("baicalensis", cladeData$species)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
cladeData$clade[4]
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
cladeData$species[1]
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
help(vector)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
label(binDenData)
View(binDenData)
cladeList
View(allData)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
View(denCladeData)
help(range)
1:5
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
denCladeData
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
denCladeData
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
View(denCladeData)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
help("scale_fill_manual")
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
levels(denCladeData$cladeList)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
library(viridis)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
View(cladeData)
View(denCladeData)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
print(cladeList)
View(denCladeData)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
View(denCladeData)
help(factor)
source('~/scutellariaMetabolites/code/hierarchicalClustering_binary.R')
denCladeData
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
shiny::runApp('interactive-data/arabidopsis-RNASeq')
shiny::runApp('interactive-data/arabidopsis-RNASeq')
shiny::runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
runApp('interactive-data/arabidopsis-RNASeq')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/hierarchicalClustering_continuous.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
View(allData)
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
warnings()
View(allData)
allData$species <- factor(allData$species, levels=c("baicalensis", "havanensis", "arenicola",
"hastifolia", "dependens", "strigillosa", "barbata", "indica", "insignis", "racemosa", "tournefortii", "altissima"))
View(allData)
levels(allData$species)
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
View(allData)
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/scutellariaMetabolites/code/stackedBarPlots.R')
source('~/sorghum_QTL/QTL_mapping/add_pheno_data.R')
View(allData)
source('~/sorghum_QTL/QTL_mapping/add_pheno_data.R')
source('~/sorghum_QTL/QTL_mapping/add_pheno_data.R')
subset <- allData[, 1:7]
View(subset)
genoData <- read.cross(format = "csv", file = "data/FIleS2_genotype.csv", na.strings="-", genotypes = c("AA", "BB"), alleles = c("A", "B"), crosstype = "riself")
library(qtl)
library(ASMap)
library(abind)
genoData <- read.cross(format = "csv", file = "data/FIleS2_genotype.csv", na.strings="-", genotypes = c("AA", "BB"), alleles = c("A", "B"), crosstype = "riself")
View(genoData)
View(genoData)
source('~/sorghum_QTL/QTL_mapping/genetic_map.R')
View(map)
View(new.sorghum.csv)
help(pp.init)
View(map)
View(new.sorghum.csv)
head(new.sorghum.csv)
new.sorghum.csv[1:3, 1:20]
new.sorghum.csv[1:3, 1:50]
View(map)
View(as.map)
source('~/sorghum_QTL/QTL_mapping/genetic_map.R')
subset <- genoData_newMap[1:3,]
View(subset)
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
help("read.cross")
source('~/sorghum_QTL/QTL_mapping/merge_data.R')
View(allData)
allData <- read.csv(file="data/FIleS2_genotype_remapped.csv", header=TRUE, sep=",")
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
colnames(genoData_newMap)
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
colnames(genoData_newMap)
colnames(genoData_newMap)[1]
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
View(genoData_newMap)
genoData_newMap <- as.data.frame(genoData_oldMap[ , 1])
View(genoData_newMap)
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
genoData_newMap <- as.data.frame(id=genoData_oldMap[ , 1])
genoData_newMap <- data.frame(id=genoData_oldMap[ , 1])
View(genoData_newMap)
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
View(genoData_newMap)
source('~/sorghum_QTL/QTL_mapping/construct_genetic_map.R')
source('~/sorghum_QTL/QTL_mapping/merge_data.R')
subset <- head(allData)
View(subset)
subset <- tail(allData)
View(subset)
source('~/sorghum_QTL/QTL_mapping/merge_data.R')
head(allData)
allData[1:5, 1:10]
allData[1:2, 1:6] <- ""
allData[1:5, 1:10]
is.na(allData[,]) <- "-"
allData[1:5, 1:10]
subset <- allData[1:5, 1:10]
View(subset)
allData[,]=="-" <- NA
allData[allData=="-"] <- NA
subset <- allData[1:5, 1:10]
View(subset)
source('~/sorghum_QTL/QTL_mapping/merge_data.R')
source('~/sorghum_QTL/QTL_mapping/merge_data.R')
